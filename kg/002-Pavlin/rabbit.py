#!python
import re

def parse_segments(text):
    lines = text.splitlines()
    segments = []
    for line in lines:
        comment_match = re.search(r'//\s*(.*)', line)
        comment = comment_match.group(1) if comment_match else ""
        line = re.sub(r'//.*', '', line).strip()  # Удаление комментариев
        if not line:
            continue
        numbers = re.findall(r'\d*\.\d*', line)  # Извлечение чисел с плавающей точкой
        if len(numbers) == 4:
            segments.append((*map(float, numbers), comment))
    return segments

def generate_xml(segments):
    xml_template = '''<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE SimpleVectorGraphics>
<Picture>
{paths}
</Picture>
'''
    path_template = '\t<Path closed="false" fill="#000000FF" name="{name}">\n\t\t<Point x="{x1}" y="{y1}"/>\n\t\t<Point x="{x2}" y="{y2}"/>\n\t</Path>'
    paths_xml = "\n".join(
        path_template.format(x1=x1, y1=y1, x2=x2, y2=y2, name=name) for x1, y1, x2, y2, name in segments
    )
    return xml_template.format(paths=paths_xml)

if __name__ == "__main__":
    input_text = """
0.5f,3.f,1.f,4.5f, // от левой щеки вверх до уха
1.f,4.5f,0.5f,6.f, // левое ухо слева снизу вверх
0.5f,6.f,0.5f, 7.5f, // левое ухо слева
0.5f, 7.5f,1.f,8.f, // левое ухо верх слева
1.f,8.f,1.5f,8.f, // левое ухо верх середина
1.5f,8.f,2.f,7.5f, // левое ухо верх справа
2.f,7.5f,1.5f, 6.f, // левое ухо справа сверху вниз
1.5f, 6.f,1.5f,4.5f, // левое ухо справа до макушки
1.5f,4.5f,3.f,4.5f, // макушка
3.f,4.5f,3.f,6.f, // правое ухо слева снизу вверх
3.f,6.f,2.5f,7.5f, // правое ухо слева
2.5f,7.5f,3.f,8.f, // правое ухо верх слева
3.f,8.f,3.5f,8.f, // правое ухо верх середина
3.5f,8.f,4.f,7.5f, // правое ухо верх справа
4.f,7.5f,4.f,6.f, // правое ухо сверху вниз
4.f,6.f,3.5f,4.5f, // правое ухо справа
3.5f,4.5f,4.f,3.f, // от правого уха вниз до щеки
4.f,3.f,3.5f,1.5f, // правая скула
3.5f,1.5f,2.5f,1.f, // подбородок справа
2.5f,1.f,2.f,1.f, // подбородок снизу
2.f,1.f,1.f,1.5f, // подбородок слева
1.f,1.5f,0.5f,3.f, // левая скула
4.f,3.f,5.5f,3.5f, // спина от головы вправо
5.5f,3.5f,7.f,3.5f, // спина верх
7.f,3.5f,7.5f,2.5f, // спина сверху до хвоста
7.5f,2.5f,8.f,2.5f, // хвост сверху
8.f,2.5f,8.f,2.f, // хвост справа
8.f,2.f,7.5f,2.f, // хвост низ справа налево
7.5f,2.f,7.5f,0.5f, // задняя нога справа сверху вниз
7.5f,0.5f,6.5f,0.5f, // задняя нога низ
6.5f,0.5f,6.5f,1.f, // задняя нога слева
6.5f,1.f,6.f,1.f, // между задних ног
6.f,1.f,6.f,0.5f, // левая задняя нога справа
6.f,0.5f,5.f,0.5f, // левая задняя нога низ
5.f,0.5f,5.f,1.f, // левая задняя нога слева
5.f,1.f,4.f,1.f, // между задними и передними ногами
4.f,1.f,4.f,0.5f, // правая передняя нога справа
4.f,0.5f,3.f,0.5f, // правая передняя нога низ
3.f,0.5f,3.f,1.f, // правая передняя нога слева
3.f,1.f,2.5f,1.f, // между передних ног
2.5f,1.f,2.5f,0.5f, // передняя нога справа
2.5f,0.5f,1.5f,0.5f, // передняя нога низ
1.5f,0.5f,1.5f,1.25f, // передняя нога слева
1.5f,3.5f,1.5f,3.f, // левый глаз слева сверху вниз
1.5f,3.f,2.f,3.f, // левый глаз низ
2.f, 3.f,2.f,3.5f, // левый глаз справа
2.f,3.5f,1.5f,3.5f, // левый глаз верх
2.5f,3.5f,2.5f,3.f, // правый глаз слева
2.5f,3.f,3.f, 3.f, // правый глаз снизу
3.f,3.f,3.f,3.5f, // правый глаз справа
3.f,3.5f,2.5f,3.5f, // правый глаз сверху
1.f,5.5f,1.f,7.f, // левая ушная раковина
3.5f,5.5f,3.5f,7.f, // правая ушная раковина
2.f,2.5f,2.5f,2.5f, // нос сверху
2.5f,2.5f,2.25f,2.f, // нос справа
2.25f,2.f,2.f,2.5f // нос слева
    """
    segments = parse_segments(input_text)
    xml_output = generate_xml(segments)
    print(xml_output)
